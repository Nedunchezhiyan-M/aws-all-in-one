import { defineConfig } from 'tsup';

export default defineConfig({
  entry: {
    'index': 'src/index.ts',
    'assume-role': 'src/assume-role.ts',
    'multi-region': 'src/multi-region.ts',
    'policy-builder': 'src/policy-builder.ts',
    's3-deployer': 'src/s3-deployer.ts',
    's3-utils': 'src/s3-utils.ts',
    'kms-utils': 'src/kms-utils.ts',
    'messaging': 'src/messaging.ts',
    'step-functions': 'src/step-functions.ts',
    'cost-manager': 'src/cost-manager.ts',
    'dynamodb-utils': 'src/dynamodb-utils.ts',
    'lambda-manager': 'src/lambda-manager.ts',
    'lambda-deployer': 'src/lambda-deployer.ts',
    'lambda-security': 'src/lambda-security.ts',
  },
  format: ['cjs', 'esm'],
  dts: true,
  splitting: true,
  sourcemap: false,
  clean: true,
  minify: true,
  treeshake: true,
  target: 'node16',
  external: [
    '@aws-sdk/client-sts',
    '@aws-sdk/client-s3',
    '@aws-sdk/client-cloudfront',
    '@aws-sdk/client-kms',
    '@aws-sdk/client-sns',
    '@aws-sdk/client-sqs',
    '@aws-sdk/client-eventbridge',
    '@aws-sdk/client-sfn',
    '@aws-sdk/client-iam',
    '@aws-sdk/client-cost-explorer',
    '@aws-sdk/client-cloudwatch',
    '@aws-sdk/client-dynamodb',
    '@aws-sdk/client-lambda',
    '@aws-sdk/util-dynamodb',
    '@aws-sdk/s3-request-presigner',
    '@aws-sdk/lib-storage',
    'mime-types'
  ],
});
